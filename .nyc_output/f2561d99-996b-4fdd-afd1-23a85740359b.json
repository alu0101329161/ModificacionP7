{"/home/usuario/prueba/src/modificacion.ts":{"path":"/home/usuario/prueba/src/modificacion.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":12,"column":8},"end":{"line":12,"column":35}},"3":{"start":{"line":13,"column":8},"end":{"line":13,"column":25}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"5":{"start":{"line":15,"column":8},"end":{"line":15,"column":25}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":25}},"7":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"8":{"start":{"line":25,"column":12},"end":{"line":25,"column":52}},"9":{"start":{"line":26,"column":12},"end":{"line":26,"column":24}},"10":{"start":{"line":28,"column":8},"end":{"line":28,"column":21}},"11":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"12":{"start":{"line":36,"column":12},"end":{"line":36,"column":56}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":39}},"14":{"start":{"line":46,"column":8},"end":{"line":50,"column":9}},"15":{"start":{"line":46,"column":21},"end":{"line":46,"column":22}},"16":{"start":{"line":46,"column":31},"end":{"line":46,"column":48}},"17":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"18":{"start":{"line":48,"column":16},"end":{"line":48,"column":29}},"19":{"start":{"line":51,"column":8},"end":{"line":51,"column":26}},"20":{"start":{"line":59,"column":20},"end":{"line":59,"column":22}},"21":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"22":{"start":{"line":60,"column":21},"end":{"line":60,"column":22}},"23":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"24":{"start":{"line":62,"column":16},"end":{"line":62,"column":28}},"25":{"start":{"line":65,"column":8},"end":{"line":65,"column":19}},"26":{"start":{"line":74,"column":20},"end":{"line":74,"column":22}},"27":{"start":{"line":75,"column":8},"end":{"line":79,"column":9}},"28":{"start":{"line":75,"column":21},"end":{"line":75,"column":22}},"29":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"30":{"start":{"line":77,"column":16},"end":{"line":77,"column":28}},"31":{"start":{"line":80,"column":8},"end":{"line":80,"column":19}},"32":{"start":{"line":87,"column":8},"end":{"line":87,"column":39}},"33":{"start":{"line":90,"column":0},"end":{"line":90,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":18},"end":{"line":17,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":21},"end":{"line":29,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":28},"end":{"line":39,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":20},"end":{"line":52,"column":5}},"line":45},"4":{"name":"(anonymous_4)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":17},"end":{"line":66,"column":5}},"line":58},"5":{"name":"(anonymous_5)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":21},"end":{"line":81,"column":5}},"line":73},"6":{"name":"(anonymous_6)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":24},"end":{"line":88,"column":5}},"line":86}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":27,"column":9}},{"start":{"line":24,"column":8},"end":{"line":27,"column":9}}],"line":24},"1":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"2":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"3":{"loc":{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},"type":"if","locations":[{"start":{"line":61,"column":12},"end":{"line":63,"column":13}},{"start":{"line":61,"column":12},"end":{"line":63,"column":13}}],"line":61},"4":{"loc":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},{"start":{"line":76,"column":12},"end":{"line":78,"column":13}}],"line":76}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":6,"8":4,"9":4,"10":2,"11":2,"12":1,"13":2,"14":28,"15":28,"16":28,"17":30,"18":13,"19":15,"20":1,"21":1,"22":1,"23":11,"24":4,"25":1,"26":1,"27":1,"28":1,"29":11,"30":4,"31":1,"32":1,"33":1},"f":{"0":1,"1":6,"2":2,"3":28,"4":1,"5":1,"6":1},"b":{"0":[4,2],"1":[1,1],"2":[13,17],"3":[4,7],"4":[4,7]},"inputSourceMap":{"version":3,"file":"/home/usuario/prueba/src/modificacion.ts","sources":["/home/usuario/prueba/src/modificacion.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,WAAW;IAWtB;;OAEG;IACH;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAkB,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,MAAc;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,cAAc;QAC1B,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAC5B,WAAW,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;SAC7C;QACD,OAAO,WAAW,CAAC,WAAW,CAAC;IACjC,CAAC;IAED;;;;OAIG;IACK,OAAO,CAAC,MAAc;QAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;YACxD,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;gBACpB,OAAO,KAAK,CAAC;aACd;SACF;QACD,OAAO,MAAM,GAAG,CAAC,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,CAAS;QACjB,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACnB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;;;OAKG;IACH,UAAU,CAAC,CAAS,EAAE,CAAS;QAC7B,MAAM,GAAG,GAAa,EAAE,CAAC;QACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACnB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACb;SACF;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAED;;;OAGG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACf,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;CACF;AAlGD,kCAkGC","sourcesContent":["/**\n * @class clas PrimeNumber para numeros primos\n */\nexport class PrimeNumber implements Iterable<number> {\n  /**\n   * Instancia de la clase PrimeNumber para respetar el patrón\n   * de diseño Singelton\n   */\n  private static primeNumber: PrimeNumber;\n  /**\n   * Almacen de numeros primos.\n   */\n  private primos100: Map<string, number>;\n\n  /**\n   * Constructor de la clase privado\n   */\n  private constructor() {\n    this.primos100 = new Map<string, number>();\n    this.addPrimo(1);\n    this.addPrimo(3);\n    this.addPrimo(5);\n    this.addPrimo(7);\n  }\n\n  /**\n   * Método que añade numneros primos en nuestro alamcen.\n   * @param numero numero a añadir\n   * @returns true si el numero se añadió\n   */\n  addPrimo(numero: number) : boolean {\n    if (this.esPrimo(numero)) {\n      this.primos100.set(`${numero}`, numero);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Método que sigue el patrón Singelton\n   * @returns Una instancia de la clase\n   */\n  public static getPrimeNumber(): PrimeNumber {\n    if (!PrimeNumber.primeNumber) {\n      PrimeNumber.primeNumber = new PrimeNumber();\n    }\n    return PrimeNumber.primeNumber;\n  }\n\n  /**\n   * Método que mira si un número es primo\n   * @param numero numero a analizar\n   * @returns Verdadedro si el numero es primo\n   */\n  private esPrimo(numero: number): boolean {\n    for (let i = 2, raiz = Math.sqrt(numero); i <= raiz; i++) {\n      if (numero % i === 0) {\n        return false;\n      } \n    }\n    return numero > 1;\n  }\n\n  /**\n   * Método que devuelve numeros primos\n   * @param n tope de número primos\n   * @returns numeros primos\n   */\n  getPrimoN(n: number): number[] {\n    const aux: number[] = [];\n    for (let x = 0; x <= n; x++) {\n      if (this.esPrimo(x)) {\n        aux.push(x);\n      }\n    }\n    return aux;\n  }\n\n  /**\n   * Método que devuelve numeros primos\n   * @param n tope inferior\n   * @param m tope superior\n   * @returns numeros primos\n   */\n  getPrimoNM(n: number, m: number): number[] {\n    const aux: number[] = [];\n    for (let x = n; x <= m; x++) {\n      if (this.esPrimo(x)) {\n        aux.push(x);\n      }\n    }\n    return aux;\n  }\n\n  /**\n   * Método que hace la clase Iterable\n   * @returns El valor de los valores del MAP\n   */\n  [Symbol.iterator](): Iterator<number> {\n    return this.primos100.values();\n  }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"598eac36f7c2a4f651f028308753f91c816a947e","contentHash":"2aa7bcffe3e0296b3770b1644b70f825c66aa7d96000eb1a9e707884efea6228"}}