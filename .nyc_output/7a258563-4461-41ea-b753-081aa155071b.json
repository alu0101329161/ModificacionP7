{"/home/usuario/prueba/src/Modificacion/modif.ts":{"path":"/home/usuario/prueba/src/Modificacion/modif.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":65}},"2":{"start":{"line":14,"column":8},"end":{"line":14,"column":25}},"3":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":33}},"5":{"start":{"line":28,"column":8},"end":{"line":28,"column":53}},"6":{"start":{"line":35,"column":8},"end":{"line":35,"column":25}},"7":{"start":{"line":42,"column":8},"end":{"line":42,"column":25}},"8":{"start":{"line":45,"column":0},"end":{"line":45,"column":24}},"9":{"start":{"line":55,"column":18},"end":{"line":55,"column":29}},"10":{"start":{"line":56,"column":8},"end":{"line":62,"column":9}},"11":{"start":{"line":56,"column":21},"end":{"line":56,"column":22}},"12":{"start":{"line":57,"column":12},"end":{"line":61,"column":13}},"13":{"start":{"line":57,"column":25},"end":{"line":57,"column":26}},"14":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"15":{"start":{"line":59,"column":20},"end":{"line":59,"column":68}},"16":{"start":{"line":63,"column":8},"end":{"line":63,"column":20}},"17":{"start":{"line":66,"column":0},"end":{"line":66,"column":32}},"18":{"start":{"line":76,"column":8},"end":{"line":76,"column":36}},"19":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"20":{"start":{"line":85,"column":12},"end":{"line":85,"column":24}},"21":{"start":{"line":87,"column":22},"end":{"line":87,"column":49}},"22":{"start":{"line":88,"column":26},"end":{"line":88,"column":46}},"23":{"start":{"line":89,"column":24},"end":{"line":89,"column":54}},"24":{"start":{"line":90,"column":8},"end":{"line":90,"column":78}},"25":{"start":{"line":99,"column":20},"end":{"line":99,"column":22}},"26":{"start":{"line":100,"column":8},"end":{"line":107,"column":9}},"27":{"start":{"line":101,"column":12},"end":{"line":106,"column":13}},"28":{"start":{"line":102,"column":16},"end":{"line":102,"column":38}},"29":{"start":{"line":105,"column":16},"end":{"line":105,"column":39}},"30":{"start":{"line":108,"column":8},"end":{"line":110,"column":9}},"31":{"start":{"line":109,"column":12},"end":{"line":109,"column":34}},"32":{"start":{"line":111,"column":8},"end":{"line":113,"column":9}},"33":{"start":{"line":112,"column":12},"end":{"line":112,"column":35}},"34":{"start":{"line":114,"column":8},"end":{"line":114,"column":19}},"35":{"start":{"line":117,"column":0},"end":{"line":117,"column":30}},"36":{"start":{"line":118,"column":10},"end":{"line":118,"column":23}},"37":{"start":{"line":119,"column":0},"end":{"line":119,"column":39}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":32},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":26},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":14},"end":{"line":29,"column":5}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":14},"end":{"line":36,"column":5}},"line":34},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":18},"end":{"line":43,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":18},"end":{"line":64,"column":5}},"line":54},"6":{"name":"(anonymous_6)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":18},"end":{"line":77,"column":5}},"line":75},"7":{"name":"(anonymous_7)","decl":{"start":{"line":83,"column":4},"end":{"line":83,"column":5}},"loc":{"start":{"line":83,"column":20},"end":{"line":91,"column":5}},"line":83},"8":{"name":"(anonymous_8)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":21},"end":{"line":115,"column":5}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":60,"column":17}},{"start":{"line":58,"column":16},"end":{"line":60,"column":17}}],"line":58},"1":{"loc":{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":86,"column":9}},{"start":{"line":84,"column":8},"end":{"line":86,"column":9}}],"line":84},"2":{"loc":{"start":{"line":100,"column":15},"end":{"line":100,"column":40}},"type":"binary-expr","locations":[{"start":{"line":100,"column":15},"end":{"line":100,"column":25}},{"start":{"line":100,"column":29},"end":{"line":100,"column":40}}],"line":100},"3":{"loc":{"start":{"line":101,"column":12},"end":{"line":106,"column":13}},"type":"if","locations":[{"start":{"line":101,"column":12},"end":{"line":106,"column":13}},{"start":{"line":101,"column":12},"end":{"line":106,"column":13}}],"line":101}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":3,"7":1,"8":1,"9":1,"10":1,"11":1,"12":6,"13":6,"14":15,"15":11,"16":1,"17":1,"18":1,"19":18,"20":10,"21":8,"22":8,"23":8,"24":8,"25":8,"26":8,"27":14,"28":4,"29":10,"30":8,"31":7,"32":8,"33":3,"34":8,"35":1,"36":1,"37":1},"f":{"0":1,"1":1,"2":2,"3":3,"4":1,"5":1,"6":1,"7":18,"8":8},"b":{"0":[11,4],"1":[10,8],"2":[22,19],"3":[4,10]},"inputSourceMap":{"version":3,"file":"/home/usuario/prueba/src/Modificacion/modif.ts","sources":["/home/usuario/prueba/src/Modificacion/modif.ts"],"names":[],"mappings":";;;AAOA;;GAEG;AACH,MAAa,MAAM;IACjB;;;;OAIG;IACH,YAAoB,IAAc,EAAU,QAAkB;QAA1C,SAAI,GAAJ,IAAI,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAEnE;;;OAGG;IACH,WAAW,CAAC,QAAkB;QAC5B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED;;;OAGG;IACH,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAtCD,wBAsCC;AAED;;GAEG;AACH,MAAa,UAAU;IACrB;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;oBACzB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;iBACjD;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAhBD,gCAgBC;AAED;;EAEE;AACF,MAAa,SAAS;IACpB;;;OAGG;IACH,OAAO,CAAC,IAAc;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,IAAc;QACtB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,OAAO,IAAI,CAAC;SACb;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;IACxE,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,GAAa,EAAE,IAAc;QACjC,MAAM,GAAG,GAAa,EAAE,CAAC;QAEzB,OAAO,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;YAChC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE;gBACpB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAY,CAAC,CAAC;aACjC;iBAAM;gBACL,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAY,CAAC,CAAC;aAClC;SACF;QAED,OAAO,GAAG,CAAC,MAAM,EAAE;YACjB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAY,CAAC,CAAC;SACjC;QACD,OAAO,IAAI,CAAC,MAAM,EAAE;YAClB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAY,CAAC,CAAC;SAClC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAnDD,8BAmDC;AAED,MAAM,CAAC,GAAG,IAAI,SAAS,CAAC;AACxB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC","sourcesContent":["/**\n * Interfaz para los algortimos\n */\nexport interface Strategy {\n  execute(dato: number[]): number[];\n}\n\n/**\n * @class clase que menja los algoritmos.\n */\nexport class Solver {\n  /**\n   * Constructor\n   * @param data array de numeros \n   * @param strategy algoritmo\n   */\n  constructor(private data: number[], private strategy: Strategy) { }\n\n  /**\n   * Cambia el algoritmo\n   * @param strategy algoritmo\n   */\n  setStrategy(strategy: Strategy) {\n    this.strategy = strategy;\n  }\n\n  /**\n   * Ejecuta el algoritmo\n   */\n  ordenar(): void {\n    this.data = this.strategy.execute(this.data);\n  }\n\n  /**\n   * Devuelve el array\n   * @returns array de numeros\n   */\n  getData(): number[] {\n    return this.data;\n  }\n\n  /**\n   * Cambia los numeros del array\n   * @param data nuevos numeros\n   */\n  setData(data: number[]): void {\n    this.data = data;\n  }\n}\n\n/**\n * @class Bubblesort\n */\nexport class BubbleSort implements Strategy {\n  /**\n   * Ejecuta el algortimo BubbleSort.\n   * @param dato array de numeros\n   */\n  execute(dato: number[]): number[] {\n    const l = dato.length;\n    for (let i = 0; i < l; i++) {\n      for (let j = 0; j < l - 1 - i; j++) {\n        if (dato[j] > dato[j + 1]) {\n          [dato[j], dato[j + 1]] = [dato[j + 1], dato[j]];\n        }\n      }\n    }\n    return dato;\n  }\n}\n\n/**\n* @clas MergeSort\n*/\nexport class MergeSort implements Strategy {\n  /**\n   * Ejecuta el algoritmo mergesort\n   * @param dato array de numeros\n   */\n  execute(dato: number[]): number[] {\n    return this.mergeSort(dato);\n  }\n\n  /**\n   * Algoritmo mergesort\n   * @param dato array de numeros\n   * @returns el array ordenado\n   */\n  mergeSort(dato: number[]): number[] {\n    if (dato.length < 2) {\n      return dato;\n    }\n\n    const medio = Math.floor(dato.length / 2);\n    const izquierda = dato.slice(0, medio);\n    const derecha = dato.slice(medio, dato.length);\n\n    return this.merge(this.mergeSort(izquierda), this.mergeSort(derecha));\n  }\n\n  /**\n   * ALgoritmo aux del Mersort\n   * @param izq array de numeros\n   * @param dere array de numeros\n   * @returns el array ordenado\n   */\n  merge(izq: number[], dere: number[]): number[] {\n    const aux: number[] = [];\n\n    while (izq.length && dere.length) {\n      if (izq[0] < dere[0]) {\n        aux.push(izq.shift() as number);\n      } else {\n        aux.push(dere.shift() as number);\n      }\n    }\n\n    while (izq.length) {\n      aux.push(izq.shift() as number);\n    }\n    while (dere.length) {\n      aux.push(dere.shift() as number);\n    }\n    return aux;\n  }\n}\n\nconst a = new MergeSort;\nconsole.log(a.mergeSort([9, 8, 7, 6]));\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b580fb71a0375ccdb5cb27ff2761ed53033d06d6","contentHash":"329128ff476876bc3d42179b6d364cffd70470e08bb4232258dc7cc1d771db0b"},"/home/usuario/prueba/src/modificacion.ts":{"path":"/home/usuario/prueba/src/modificacion.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":108}},"2":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"3":{"start":{"line":21,"column":12},"end":{"line":21,"column":59}},"4":{"start":{"line":23,"column":8},"end":{"line":23,"column":41}},"5":{"start":{"line":30,"column":8},"end":{"line":30,"column":29}},"6":{"start":{"line":37,"column":8},"end":{"line":37,"column":43}},"7":{"start":{"line":44,"column":8},"end":{"line":44,"column":55}},"8":{"start":{"line":47,"column":0},"end":{"line":47,"column":36}},"9":{"start":{"line":58,"column":8},"end":{"line":58,"column":40}},"10":{"start":{"line":65,"column":8},"end":{"line":65,"column":33}},"11":{"start":{"line":73,"column":8},"end":{"line":73,"column":37}},"12":{"start":{"line":76,"column":0},"end":{"line":76,"column":74}},"13":{"start":{"line":87,"column":8},"end":{"line":87,"column":40}},"14":{"start":{"line":94,"column":8},"end":{"line":94,"column":33}},"15":{"start":{"line":102,"column":8},"end":{"line":102,"column":37}},"16":{"start":{"line":105,"column":0},"end":{"line":105,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":14,"column":21}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":29},"end":{"line":24,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":5}},"line":29},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":16},"end":{"line":38,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":19},"end":{"line":45,"column":5}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":25},"end":{"line":59,"column":5}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":29},"end":{"line":66,"column":5}},"line":64},"7":{"name":"(anonymous_7)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":24},"end":{"line":74,"column":5}},"line":72},"8":{"name":"(anonymous_8)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":25},"end":{"line":88,"column":5}},"line":86},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":4},"end":{"line":93,"column":5}},"loc":{"start":{"line":93,"column":29},"end":{"line":95,"column":5}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":24},"end":{"line":103,"column":5}},"line":101}},"branchMap":{"0":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20}},"s":{"0":1,"1":1,"2":3,"3":1,"4":3,"5":5,"6":5,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1},"f":{"0":1,"1":3,"2":5,"3":5,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"b":{"0":[1,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/prueba/src/modificacion.ts","sources":["/home/usuario/prueba/src/modificacion.ts"],"names":[],"mappings":";;;AAAA;;;;GAIG;AACH,MAAa,YAAY;IAEvB;;;OAGG;IACH,gBAAuB,CAAC;IACxB;;;OAGG;IACI,MAAM,CAAC,eAAe;QAC3B,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE;YAC9B,YAAY,CAAC,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;SAChD;QACD,OAAO,YAAY,CAAC,YAAY,CAAC;IACnC,CAAC;IACD;;;OAGG;IACK,KAAK;QACT,OAAO,IAAI,CAAC,MAAM,EAAE,CAAA;IACxB,CAAC;IACD;;;OAGG;IACK,KAAK,CAAC,CAAS,EAAE,CAAS;QAC9B,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IACD;;;OAGG;IACK,QAAQ,CAAC,CAAS,EAAE,CAAS;QACjC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;CACF;AAtCD,oCAsCC;AAED;;;GAGG;AACH,MAAa,+BAA+B;IAE1C;;;OAGG;IACH,YAAY,OAAiB;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACH,sBAAsB;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;CACF;AA1BD,0EA0BC;AAYD;;;GAGG;AACH,MAAa,yBAAyB;IAIpC;;;OAGG;IACH,YAAY,OAAuB;QACjC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED;;;OAGG;IACH,sBAAsB;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IAC7B,CAAC;IAED;;;;OAIG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IACjC,CAAC;CACF;AA5BD,8DA4BC","sourcesContent":["/**\n * Clase RandomNumber siguiendo patron\n * Singleton Permite obtener numeros \n * aleatorios\n */\nexport class RandomNumber {\n  private static randomNumber: RandomNumber;\n  /**\n   * Constructor de la clase privado vacio ya que \n   * esta clase solo genera numeros aleatorios\n   */\n  private constructor() {}\n  /**\n   * Método que sigue el patrón Singelton\n   * @returns Una instancia de la clase\n   */\n  public static getRandomNumber(): RandomNumber {\n    if (!RandomNumber.randomNumber) {\n      RandomNumber.randomNumber = new RandomNumber();\n    }\n    return RandomNumber.randomNumber;\n  }\n  /**\n   * Funcion ran01\n   * @returns Un número aleatorio en punto flotante generado en el rango [0, 1].\n   */\n   public ran01(){\n      return Math.random()\n  }\n  /**\n   * Funcion ranNM\n   * @returns Un número aleatorio en punto flotante generado en el rango [n, m], donde n y m son parámetros del método correspondiente.\n   */\n   public ranNM(n :number, m :number){\n      return Math.random() * (m-n) + n;\n  }\n  /**\n   * Funcion intRanNM\n   * @returns Un número aleatorio entero generado en el rango [n, m], donde n y m son parámetros del método correspondiente.\n   */\n   public intRanNM(n :number, m :number){\n      return Math.floor(Math.random() * (m-n)) + n;\n  }\n}\n\n/**\n * Clase iterable que devuelve una coleccion e\n * implementa una interfaz iterable de tipo number\n */\nexport class RandomNumberSetCollectionNumber implements Iterable<number> {\n  private numeros: Set<number>;\n  /**\n   * Constructor\n   * @param numeros conjunto de numeros aleatorios\n   */\n  constructor(numeros: number[]) {\n    this.numeros = new Set(numeros);\n  }\n  \n  /**\n   * Funcion getCantidadDeElementos.\n   * @returns tamaño del conjunto\n   */\n  getCantidadDeElementos() {\n      return this.numeros.size;\n  }\n  \n  /**\n   * Iterador.\n   * Recorre el conjunto\n   * @returns valores del conjunto\n   */\n  [Symbol.iterator](): Iterator<number> {\n      return this.numeros.values();\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Clase iterable que devuelve una coleccion e\n * implementa una interfaz iterable de RandomNumber\n */\nexport class RandomNumberSetCollection implements Iterable<RandomNumber> {\n\n  private numeros: Set<RandomNumber>;\n\n  /**\n   * Constructor\n   * @param numeros conjunto de numeros aleatorios\n   */\n  constructor(numeros: RandomNumber[]) {\n    this.numeros = new Set(numeros);\n  }\n  \n  /**\n   * Funcion getCantidadDeElementos.\n   * @returns tamaño del conjunto\n   */\n  getCantidadDeElementos() {\n      return this.numeros.size;\n  }\n  \n  /**\n   * Iterador.\n   * Recorre el conjunto\n   * @returns valores del conjunto\n   */\n  [Symbol.iterator](): Iterator<RandomNumber> {\n      return this.numeros.values();\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fffc3580a2f3a929b431bbd77ca5f0708603c86b","contentHash":"727ad50621ed0dcb208060fc3ecfe3291b0e5227d2d624d73d0b1485acff21ec"}}